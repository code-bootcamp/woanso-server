# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String
  nickname: String!
  email: String!
  phone: String!
  interest: USER_INTEREST_ENUM!
  balance: Int!
}

enum USER_INTEREST_ENUM {
  romance
  drama
  fantasy
  action
  school
  horror
}

type Comic {
  comicId: String
  title: String!
  deliveryFee: Int!
  rentalFee: Int!
  author: String!
  illustrator: String!
  publisher: String!
  rating: Float!
  totalBooks: Int!
  description: String!
  ISBN: String!
  isAvailable: Boolean!
}

type PointTransaction {
  id: String!
  impUid: String!
  amount: Int!
  status: POINT_TRANSACTION_STATUS_ENUM!
  user: User!
  createdAt: DateTime!
}

enum POINT_TRANSACTION_STATUS_ENUM {
  PAYMENT
  CANCEL
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Review {
  reviewId: String!
  content: String!
  like: Int!
  rating: Float!
  user: User!
  comic: Comic!
}

type Query {
  fetchUser(email: String!): User!
  fetchUsers: [User!]!
  searchUsers(
    """유저 닉네임으로 검색"""
    search: String
  ): [User!]!
  findEmail(phone: String!): User!
  authUser: String!
  fetchComics: [Comic!]!
  searchComics(
    """검색어"""
    search: String
  ): [Comic!]!
  fetchComic(comicId: String!): Comic!
  availableComic: [Int!]!
  fetchReviews: [Review!]!
  fetchReview(reviewId: String!): Review!
}

type Mutation {
  uploadFile(files: [Upload!]!): [String!]!
  uploadOneFile(file: Upload!): String!
  signUp(email: String!, password: String!, nickname: String!, phone: String!, interest: String!): User!
  signUpAdmin(email: String!, password: String!, phone: String!): User!
  updateUser(email: String!, updateUserInput: UpdateUserInput!): User!
  updatePassword(email: String!, phone: String!, newPassword: String!): String!
  deleteUser(email: String!, password: String!): Boolean!
  sendToken(phone: String!): String!
  authToken(phone: String!, token: String!): String!
  blockUser(id: String!): Boolean!
  login(email: String!, password: String!): String!
  restoreAccessToken: String!
  logout: String!
  adminSignUp(userDTO: UserDTO!): String!
  loginAdmin(email: String!, password: String!): String!
  updateComic(comicId: String!, updateComicInput: UpdateComicInput!, createUrlInput: CreateUrlInput!): Comic!
  deleteComic(reviewId: ID!): Boolean!
  restoreComic(reviewId: ID!): Boolean!
  createComic(createComicInput: CreateComicInput!): Comic!
  createReview(createReviewInput: CreateReviewInput!): Review!
  createPointTransaction(impUid: String!, comicId: String!, amount: Int!): PointTransaction!
  cancelPointTransaction(impUid: String!, comicId: String!): PointTransaction!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UpdateUserInput {
  email: String
  password: String
  nickname: String
  phone: String
  interest: String
}

input UserDTO {
  email: String!
  password: String!
  nickname: String!
  phone: String!
  interest: String!
}

input UpdateComicInput {
  title: String
  deliveryFee: Int
  rentalFee: Int
  author: String
  illustrator: String
  publisher: String
  totalBooks: Int
  description: String
  ISBN: String
  isAvailable: Boolean
  stock: Int
  url: [String!]
}

input CreateUrlInput {
  url: [String!]!
  isMain: Boolean!
}

input CreateComicInput {
  title: String!
  deliveryFee: Int!
  rentalFee: Int!
  author: String!
  illustrator: String!
  publisher: String!
  totalBooks: Int!
  description: String!
  ISBN: String!
  isAvailable: Boolean!
  stock: Int!
  url: [String!]!
}

input CreateReviewInput {
  comicId: String!
  userId: String!
  content: String!
  like: Int!
}