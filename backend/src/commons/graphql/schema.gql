# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String
  nickname: String!
  email: String!
  phone: String!
  interest: USER_INTEREST_ENUM!
  role: USER_ROLE_ENUM!
  balance: Int!
}

enum USER_INTEREST_ENUM {
  romance
  drama
  fantasy
  action
  school
  horror
}

type ComicRating {
  comicRatingId: String!
  totalRating: Int!
  comicRating: Float!
}

type Comic {
  comicId: String
  title: String!
  deliveryFee: Int!
  rentalFee: Int!
  author: String!
  illustrator: String!
  publisher: String!
  totalBooks: Int!
  description: String!
  ISBN: String!
  isAvailable: Boolean!
  comicRating: ComicRating!
}

type Review {
  reviewId: String!
  content: String!
  like: Int!
  user: User!
}

type Query {
  fetchBoards(page: Float = 1, order: String = "DESC"): [Board!]!
  fetchUserBoards: [Board!]!
  fetchBoard(id: String!): Board!
  fetchUser(email: String!): User!
  fetchUsers: [User!]!
  searchUsers(
    """
    유저 닉네임으로 검색
    """
    search: String
  ): [User!]!
  findEmail(phone: String!): User!
  authUser: String!
  fetchComics: [Comic!]!
  searchComics(
    """
    검색어
    """
    search: String
  ): [Comic!]!
  fetchComic(comicId: String!): Comic!
  availableComic: [Int!]!
}

type Mutation {
  createBoard(createBoardInput: CreateBoardInput!): Board!
  updateBoard(id: String!, updateBoardInput: UpdateBoardInput!): Board!
  deleteBoard(id: String!): Boolean!
  uploadFile(files: [Upload!]!): [String!]!
  uploadOneFile(file: Upload!): String!
  signUp(
    email: String!
    password: String!
    nickname: String!
    phone: String!
    interest: String!
  ): User!
  signUpAdmin(email: String!, password: String!, phone: String!): User!
  updateUser(email: String!, updateUserInput: UpdateUserInput!): User!
  updatePassword(email: String!, phone: String!, newPassword: String!): String!
  deleteUser(email: String!, password: String!): Boolean!
  sendToken(phone: String!): String!
  authToken(phone: String!, token: String!): String!
  blockUser(id: String!): Boolean!
  login(email: String!, password: String!): String!
  restoreAccessToken: String!
  logout: String!
  updateComic(
    comicId: String!
    updateComicInput: UpdateComicInput!
    createUrlInput: CreateUrlInput!
  ): Comic!
  deleteComic(comicId: ID!): Boolean!
  restoreComic(comicId: ID!): Boolean!
  createComic(createComicInput: CreateComicInput!): Comic!
  createReview(createReviewInput: CreateReviewInput!): Review!
  deleteReview(reviewId: ID!): Boolean!
  restoreReview(reviewId: ID!): Boolean!
}

input CreateBoardInput {
  title: String
  contents: String
  boardImg: [String!]
}

input UpdateBoardInput {
  title: String
  contents: String
  boardImg: [String!]
}

"""
The `Upload` scalar type represents a file upload.
"""
scalar Upload

input UpdateUserInput {
  email: String
  password: String
  nickname: String
  phone: String
  interest: String
}

input UpdateComicInput {
  title: String
  deliveryFee: Int
  rentalFee: Int
  author: String
  illustrator: String
  publisher: String
  totalBooks: Int
  description: String
  ISBN: String
  isAvailable: Boolean
  stock: Int
  url: [String!]
}

input CreateUrlInput {
  url: [String!]!
  isMain: Boolean!
}

input CreateComicInput {
  title: String!
  deliveryFee: Int!
  rentalFee: Int!
  author: String!
  illustrator: String!
  publisher: String!
  totalBooks: Int!
  description: String!
  ISBN: String!
  isAvailable: Boolean!
  stock: Int!
  url: [String!]!
}

input CreateReviewInput {
  comicId: String!
  userId: String!
  content: String!
  rating: Float!
}
